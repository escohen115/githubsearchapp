{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","searchInput","setSearchInput","searchResults","setSearchResults","followers","setFollowers","pageCount","setPageCount","confObj","method","headers","getFollowers","fetch","followers_url","then","res","json","data","useEffect","Object","keys","length","className","onClick","id","onSubmit","e","preventDefault","type","value","onChange","target","includes","src","avatar_url","alt","href","html_url","login","map","follower","Math","random","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oMA8GeA,MA3Gf,WACA,MAAsCC,mBAAS,IAA/C,mBAAOC,EAAP,KAAoBC,EAApB,KACA,EAA0CF,mBAAS,IAAnD,mBAAOG,EAAP,KAAsBC,EAAtB,KACA,EAAkCJ,mBAAS,IAA3C,mBAAOK,EAAP,KAAkBC,EAAlB,KACA,EAAkCN,mBAAS,GAA3C,mBAAOO,EAAP,KAAkBC,EAAlB,KAEIC,EACJ,CACEC,OAAQ,MACRC,QAAS,CACL,eAAgB,mBAChB,OAAU,iCACV,aAAc,aACd,cAAiB,6CAsBvB,SAASC,IACPC,MAAM,GAAD,OAAIV,EAAcW,cAAlB,iBAAwCP,EAAxC,gBAAiEE,GACrEM,MAAK,SAAAC,GAAG,OAAEA,EAAIC,UACdF,MAAK,SAAAG,GACJZ,EAAaY,MAEfV,EAAaD,EAAU,GAUvB,OAlCFY,qBAAU,WACRb,EAAa,IACTc,OAAOC,KAAKlB,GAAemB,OAAS,GACtCV,MAEF,CAACT,IA8BC,sBAAKoB,UAAU,MAAf,UACE,yBAAQA,UAAU,aAAlB,UACE,oBAAIC,QAAS,kBATnBtB,EAAe,IACfM,EAAa,GACbF,EAAa,SACbF,EAAiB,KAMX,gCACA,uBAAMqB,GAAG,cAAaC,SA9B9B,SAAsBC,GAClBA,EAAEC,iBACFpB,EAAa,GACbK,MAAM,gCAAD,OAAiCZ,GAAeQ,GACpDM,MAAK,SAAAC,GAAG,OAAEA,EAAIC,UACdF,MAAK,SAAAG,GACJd,EAAiBc,OAwBf,UACE,uBACEO,GAAG,eACHI,KAAK,OACLC,MAAO7B,EACP8B,SAAU,SAAAJ,GAAC,OAAEzB,EAAeyB,EAAEK,OAAOF,UAEvC,uBAAOP,UAAU,SAAQM,KAAK,SAASC,MAAM,iBAI/C,sBAAKP,UAAU,YAAf,UACE,+BAAKH,OAAOC,KAAKlB,GAAe8B,SAAS,WAApC,iBAAoE,KAAzE,OAEA,qBAAKR,GAAG,eAAR,SACIL,OAAOC,KAAKlB,GAAe8B,SAAS,cACpC,qBAAKR,GAAG,gBAAgBS,IAAM/B,EAAcgC,WAAYC,IAAI,WAC5D,OAIDhB,OAAOC,KAAKlB,GAAe8B,SAAS,SACjC,+BACE,oBAAGI,KAAMlC,EAAcmC,SAAvB,cAAmCnC,EAAcoC,MAAjD,QACCpC,EAAcE,UAFjB,IAE6BA,EAAY,EAAI,YAAa,cAE5D,KAEJ,qBAAKkB,UAAWlB,EAAUiB,OAAS,EAAI,gBAAkB,OAAzD,SACGnB,EAAcE,UACVA,EAAUmC,KAAI,SAAAC,GACb,OACI,8BACE,mBAAGJ,KAAMI,EAASH,SAAlB,SACE,qBAAKf,UAAU,iBAAgBW,IAAKO,EAASN,WAAYC,IAAKK,EAASF,WAFjEG,KAAKC,aAQrB,OAIFvB,OAAOC,KAAKlB,GAAemB,OAAS,GAA0B,KAArBjB,EAAUiB,OAChD,wBAAQC,UAAU,SAAQC,QAAS,kBAAIZ,KAAvC,wBACD,YC5FDgC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB/B,MAAK,YAAkD,IAA/CgC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,K","file":"static/js/main.d5b5c539.chunk.js","sourcesContent":["import './App.css';\nimport React, { useEffect, useState } from \"react\"\n\nfunction App() {\nconst [searchInput, setSearchInput] = useState(\"\")\nconst [searchResults, setSearchResults] = useState({})\nconst [followers, setFollowers] = useState([])\nconst [pageCount, setPageCount] = useState(1)\n\nlet confObj = \n{\n  method: 'GET',\n  headers: {\n      'Content-Type': 'application/json',\n      'Accept': 'application/vnd.github.v3+json',\n      'User-Agent': 'escohen115',\n      'Authorization': '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'\n  }\n}\n\nuseEffect(()=>{\n  setFollowers([])\n  if (Object.keys(searchResults).length > 2){\n    getFollowers()\n  }\n},[searchResults])  \n    \n\nfunction handleSubmit(e){\n    e.preventDefault()\n    setPageCount(1)\n    fetch(`https://api.github.com/users/${searchInput}`, confObj)\n    .then(res=>res.json())\n    .then(data=>{\n      setSearchResults(data) \n    })\n}\n\nfunction getFollowers(){\n  fetch(`${searchResults.followers_url}?page=${pageCount}&per_page=32`, confObj)\n  .then(res=>res.json())\n  .then(data=>{\n    setFollowers(data)\n  })\n  setPageCount(pageCount+1)\n}\n\nfunction reset () {\n  setSearchInput('')\n  setPageCount(1)\n  setFollowers([])\n  setSearchResults({})\n}\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1 onClick={()=>reset()}>GitHub User Search</h1>  \n        <form id=\"user-search\"onSubmit={handleSubmit}>\n          <input \n            id=\"search-input\"\n            type=\"text\" \n            value={searchInput}\n            onChange={e=>setSearchInput(e.target.value)}>\n          </input>\n          <input className=\"button\"type=\"submit\" value=\"Search\"></input>\n        </form>\n      </header>\n\n        <div className=\"user-info\">\n          <h3>{Object.keys(searchResults).includes('message') ? `User not found` : null} </h3>\n\n          <div id=\"profile-card\">\n            { Object.keys(searchResults).includes('avatar_url') ? \n              <img id=\"profile-image\" src={ searchResults.avatar_url} alt=\"avatar\"/>  \n            : null\n            }\n          </div>\n\n            {Object.keys(searchResults).includes('login') ?\n                <h3> \n                  <a href={searchResults.html_url}> {searchResults.login}  </a> \n                  {searchResults.followers} {followers > 0 ? \"followers\": \"follower\"}\n                </h3>\n            : null }\n\n          <div className={followers.length > 0 ? \"follower-list\" : \"none\"}>\n            {searchResults.followers ?\n                (followers.map(follower=>{\n                  return (\n                      <div key={Math.random()}>\n                        <a href={follower.html_url}> \n                          <img className=\"follower-image\"src={follower.avatar_url} alt={follower.login}/> \n                          </a>\n                      </div>   \n                    )\n                  })\n                )\n              : null\n            }\n          </div> \n            {\n              Object.keys(searchResults).length > 0 && followers.length === 32 ?\n                (<button className=\"button\"onClick={()=>getFollowers()}> Load More</button>)\n              : null\n            }\n        </div>\n    </div>\n  );\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}